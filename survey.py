import telebot
from telebot import types

import os
from dotenv import load_dotenv

load_dotenv('.env')
TOKEN = os.getenv("TOKEN")

bot = telebot.TeleBot(TOKEN)


def create_markup(language):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    if language == 'Russian':
        btn1 = types.KeyboardButton('üÜï –ù–æ–≤–∞—è –∑–∞–¥–∞—á–∞')
        btn2 = types.KeyboardButton('üìÑ –ú–æ–∏ –∑–∞–¥–∞—á–∏')
        btn3 = types.KeyboardButton('üìñ–†–∞—Å—Å–º–æ—Ç—Ä–µ—Ç—å –∑–∞–¥–∞—á—É')
        btn4 = types.KeyboardButton('‚ùå –£–¥–∞–ª–∏—Ç—å –∑–∞–¥–∞—á—É')
        btn5 = types.KeyboardButton('üìä –ê–Ω–∞–ª–∏—Ç–∏–∫–∞')
        btn6 = types.KeyboardButton('‚ùì –ü—Ä–æ–π—Ç–∏ –æ–ø—Ä–æ—Å')
        btn7 = types.KeyboardButton("üëÄ –û –±–æ—Ç–µ")
        markup.add(btn1, btn2, btn3, btn4, btn5, btn6, btn7)
    elif language == 'English':
        btn1 = types.KeyboardButton('üÜï New task')
        btn2 = types.KeyboardButton('üìÑ My tasks')
        btn3 = types.KeyboardButton('üìñ Task info')
        btn4 = types.KeyboardButton('‚ùå Delete task')
        btn5 = types.KeyboardButton('üìä Analytics')
        btn6 = types.KeyboardButton('‚ùì Take a survey')
        btn7 = types.KeyboardButton("üëÄ About bot")
        markup.add(btn1, btn2, btn3, btn4, btn5, btn6, btn7)
    return markup


# SURVEY CLASS - list of questions
class SurveyClass:

    def __init__(self):
        pass

    def question_one(self, message, lang):
        if lang == 'English':
            bot.send_message(message.from_user.id,
                             "Rate the complexity of your typical work day on a scale of 1 to 10, where 1 is very easy,"
                             "and 10 is very difficult."
                             "\n\nPlease consider the variety of tasks you encounter.")
        elif lang == 'Russian':
            bot.send_message(message.from_user.id,
                             "–û—Ü–µ–Ω–∏—Ç–µ —É—Ä–æ–≤–µ–Ω—å —Å–ª–æ–∂–Ω–æ—Å—Ç–∏ –≤–∞—à–µ–≥–æ –æ–±—ã—á–Ω–æ–≥–æ —Ä–∞–±–æ—á–µ–≥–æ –¥–Ω—è –ø–æ —à–∫–∞–ª–µ –æ—Ç 1 –¥–æ 10, "
                             "–≥–¥–µ 1 - –æ—á–µ–Ω—å"
                             " –ª–µ–≥–∫–∏–π, 10 - –æ—á–µ–Ω—å —Å–ª–æ–∂–Ω—ã–π.\n\n"
                             "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É—á—Ç–∏—Ç–µ —Ä–∞–∑–Ω–æ–æ–±—Ä–∞–∑–∏–µ –∑–∞–¥–∞—á, —Å –∫–æ—Ç–æ—Ä—ã–º–∏ –≤—ã —Å—Ç–∞–ª–∫–∏–≤–∞–µ—Ç–µ—Å—å")

    def question_one_hard(self, message, lang):
        if lang == 'English':
            bot.send_message(message.from_user.id,
                             "Rate the complexity of your most difficult work day on a scale of 1 to 10, where 1 is "
                             "very easy,"
                             "and 10 is very difficult."
                             "\n\nPlease consider the variety of tasks you encounter.")
        elif lang == 'Russian':
            bot.send_message(message.from_user.id,
                             "–û—Ü–µ–Ω–∏—Ç–µ —É—Ä–æ–≤–µ–Ω—å —Å–ª–æ–∂–Ω–æ—Å—Ç–∏ –≤–∞—à–µ–≥–æ —Å–∞–º–æ–≥–æ —Å–ª–æ–∂–Ω–æ–≥–æ —Ä–∞–±–æ—á–µ–≥–æ –¥–Ω—è –ø–æ —à–∫–∞–ª–µ –æ—Ç 1 –¥–æ 10, "
                             "–≥–¥–µ 1 - –æ—á–µ–Ω—å"
                             " –ª–µ–≥–∫–∏–π, 10 - –æ—á–µ–Ω—å —Å–ª–æ–∂–Ω—ã–π.\n\n"
                             "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É—á—Ç–∏—Ç–µ —Ä–∞–∑–Ω–æ–æ–±—Ä–∞–∑–∏–µ –∑–∞–¥–∞—á, —Å –∫–æ—Ç–æ—Ä—ã–º–∏ –≤—ã —Å—Ç–∞–ª–∫–∏–≤–∞–µ—Ç–µ—Å—å")

    def question_two(self, message, lang):
        if lang == 'English':
            bot.send_message(message.from_user.id,
                             "Rate you typical task complexity on a scale from 1 to 10, where 1 is very easy and 10 "
                             "is very difficult"
                             "from 1 to 10.")
        elif lang == 'Russian':
            bot.send_message(message.from_user.id,
                             "–û—Ü–µ–Ω–∏—Ç–µ —É—Ä–æ–≤–µ–Ω—å —Å–ª–æ–∂–Ω–æ—Å—Ç–∏ –≤–∞—à–µ–π –æ–±—ã—á–Ω–æ–π –∑–∞–¥–∞—á–∏, –æ—Ü–µ–Ω–∏—Ç–µ "
                             "—É—Ä–æ–≤–µ–Ω—å —Å–ª–æ–∂–Ω–æ—Å—Ç–∏ –æ—Ç 1 –¥–æ 10")

    def question_two_hard(self, message, lang):
        if lang == 'English':
            bot.send_message(message.from_user.id,
                             "Imagine a challenging task. How would you rate its complexity on a scale from 1 to 10, "
                             "where 1 is very easy and 10 is very difficult?")
        elif lang == 'Russian':
            bot.send_message(message.from_user.id,
                             "–ü—Ä–µ–¥—Å—Ç–∞–≤—å—Ç–µ —Å–∞–º—É—é —Å–ª–æ–∂–Ω—É—é –¥–ª—è –≤–∞—Å –∑–∞–¥–∞—á—É. –ù–∞—Å–∫–æ–ª—å–∫–æ –±—ã –≤—ã –æ—Ü–µ–Ω–∏–ª–∏ –µ—ë —Å–ª–æ–∂–Ω–æ—Å—Ç—å –ø–æ —à–∫–∞–ª–µ "
                             "–æ—Ç 1 –¥–æ 10,"
                             "–≥–¥–µ 1 - –æ—á–µ–Ω—å –ª–µ–≥–∫–æ, –∞ 10 - –æ—á–µ–Ω—å —Å–ª–æ–∂–Ω–æ?")

    def question_three(self, message, lang):
        if lang == 'English':
            data_task_markup1 = types.ReplyKeyboardMarkup(resize_keyboard=True)
            btn1 = types.KeyboardButton("‚ö°Ô∏è At the moment of receiving the task")
            btn2 = types.KeyboardButton("üí≠ After planning")
            btn3 = types.KeyboardButton("üßò‚Äç‚ôÇÔ∏è As the need arises")
            data_task_markup1.add(btn1, btn2, btn3)
            bot.send_message(message.from_user.id,
                             "How do you typically estimate task completion time?",
                             reply_markup=data_task_markup1)
        elif lang == 'Russian':
            data_task_markup1 = types.ReplyKeyboardMarkup(resize_keyboard=True)
            btn1 = types.KeyboardButton("‚ö°Ô∏è –í –º–æ–º–µ–Ω—Ç –ø–æ–ª—É—á–µ–Ω–∏—è –∑–∞–¥–∞—á–∏")
            btn2 = types.KeyboardButton("üí≠ –ü–æ—Å–ª–µ –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è")
            btn3 = types.KeyboardButton("üßò‚Äç‚ôÇÔ∏è –ü–æ –º–µ—Ä–µ –≤–æ–∑–Ω–∏–∫–Ω–æ–≤–µ–Ω–∏—è –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏")
            data_task_markup1.add(btn1, btn2, btn3)
            bot.send_message(message.from_user.id,
                             "–ö–∞–∫ –≤—ã –æ–±—ã—á–Ω–æ –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç–µ –≤—Ä–µ–º—è –Ω–∞—á–∞–ª–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∑–∞–¥–∞—á–∏?",
                             reply_markup=data_task_markup1)

    def question_three_hard(self, message, lang):
        if lang == 'English':
            data_task_markup1 = types.ReplyKeyboardMarkup(resize_keyboard=True)
            btn1 = types.KeyboardButton("‚ö°Ô∏è At the moment of receiving the task")
            btn2 = types.KeyboardButton("üí≠ After planning")
            btn3 = types.KeyboardButton("üßò‚Äç‚ôÇÔ∏è As the need arises")
            data_task_markup1.add(btn1, btn2, btn3)
            bot.send_message(message.from_user.id,
                             "How do you typically estimate completion time of your hardest task?",
                             reply_markup=data_task_markup1)
        elif lang == 'Russian':
            data_task_markup1 = types.ReplyKeyboardMarkup(resize_keyboard=True)
            btn1 = types.KeyboardButton("‚ö°Ô∏è –í –º–æ–º–µ–Ω—Ç –ø–æ–ª—É—á–µ–Ω–∏—è –∑–∞–¥–∞—á–∏")
            btn2 = types.KeyboardButton("üí≠ –ü–æ—Å–ª–µ –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è")
            btn3 = types.KeyboardButton("üßò‚Äç‚ôÇÔ∏è –ü–æ –º–µ—Ä–µ –≤–æ–∑–Ω–∏–∫–Ω–æ–≤–µ–Ω–∏—è –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏")
            data_task_markup1.add(btn1, btn2, btn3)
            bot.send_message(message.from_user.id,
                             "–ö–∞–∫ –≤—ã –æ–±—ã—á–Ω–æ –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç–µ –≤—Ä–µ–º—è –Ω–∞—á–∞–ª–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –≤–∞—à–µ–π —Å–∞–º–æ–π —Å–ª–æ–∂–Ω–æ–π –∑–∞–¥–∞—á–∏?",
                             reply_markup=data_task_markup1)

    def question_four(self, message, lang):
        if lang == 'English':
            bot.send_message(message.from_user.id,
                             "Approximately, how many hours do you usually spend on solving a task?\n\nPlease write a "
                             "number")
        elif lang == 'Russian':
            bot.send_message(message.from_user.id,
                             "–ü—Ä–∏–º–µ—Ä–Ω–æ —Å–∫–æ–ª—å–∫–æ —á–∞—Å–æ–≤ –≤—ã –æ–±—ã—á–Ω–æ —Ç—Ä–∞—Ç–∏—Ç–µ –Ω–∞ —Ä–µ—à–µ–Ω–∏–µ –∑–∞–¥–∞—á–∏?\n–ó–∞–ø–∏—à–∏—Ç–µ —á–∏—Å–ª–æ–º")

    def question_four_hard(self, message, lang):
        if lang == 'English':
            bot.send_message(message.from_user.id,
                             "Approximately, how many hours do you usually spend on solving a hard task?\n\n Write a "
                             "number")
        elif lang == 'Russian':
            bot.send_message(message.from_user.id,
                             "–ü—Ä–∏–º–µ—Ä–Ω–æ —Å–∫–æ–ª—å–∫–æ —á–∞—Å–æ–≤ –≤—ã –æ–±—ã—á–Ω–æ —Ç—Ä–∞—Ç–∏—Ç–µ –Ω–∞ —Ä–µ—à–µ–Ω–∏–µ —Å–ª–æ–∂–Ω–æ–π –∑–∞–¥–∞—á–∏?\n–ó–∞–ø–∏—à–∏—Ç–µ —á–∏—Å–ª–æ–º")

    def question_five(self, message, lang):
        if lang == 'English':
            bot.send_message(message.from_user.id,
                             "Rate how well the task was completed on time from 0 to 10 (where 0 - not completed on "
                             "time,"
                             "10 - completed right on time).\n\n"
                             "Please enter a number from 0 to 10.")
        elif lang == 'Russian':
            bot.send_message(message.from_user.id,
                             "–û—Ü–µ–Ω–∏—Ç–µ, –Ω–∞—Å–∫–æ–ª—å–∫–æ –≤–∞—à–∞ –∑–∞–¥–∞—á–∞ –±—ã–ª–∞ –±—ã –≤—ã–ø–æ–ª–Ω–µ–Ω–∞ –≤ —Å—Ä–æ–∫ –æ—Ç 0 –¥–æ 10 (–≥–¥–µ 0 - –Ω–µ "
                             "–≤—ã–ø–æ–ª–Ω–µ–Ω–∞ –≤"
                             "—Å—Ä–æ–∫,"
                             "10 - –≤—ã–ø–æ–ª–Ω–µ–Ω–∞ —Ç–æ—á–Ω–æ –≤ —Å—Ä–æ–∫).\n\n"
                             "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ –æ—Ç 0 –¥–æ 10.")

    def question_five_hard(self, message, lang):
        if lang == 'English':
            bot.send_message(message.from_user.id,
                             "Rate how well the hardest task was completed on time from 0 to 10 (where 0 - not "
                             "completed on"
                             "time,"
                             "10 - completed right on time).\n\n"
                             "Please enter a number from 0 to 10.")
        elif lang == 'Russian':
            bot.send_message(message.from_user.id,
                             "–û—Ü–µ–Ω–∏—Ç–µ, –Ω–∞—Å–∫–æ–ª—å–∫–æ —Å–∞–º–∞—è —Å–ª–æ–∂–Ω–∞—è –∑–∞–¥–∞—á–∞ –±—ã–ª–∞ –±—ã –≤—ã–ø–æ–ª–Ω–µ–Ω–∞ –≤–∞–º–∏ –≤ —Å—Ä–æ–∫ –æ—Ç 0 –¥–æ 10 (–≥–¥–µ 0 -"
                             "–Ω–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∞ –≤ —Å—Ä–æ–∫,"
                             "10 - –≤—ã–ø–æ–ª–Ω–µ–Ω–∞ —Ç–æ—á–Ω–æ –≤ —Å—Ä–æ–∫).\n\n"
                             "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ –æ—Ç 0 –¥–æ 10.")

    def question_six(self, message, lang):
        if lang == 'English':
            help_data_markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
            btn1 = types.KeyboardButton("Yes")
            btn2 = types.KeyboardButton("No")
            help_data_markup.add(btn1, btn2)
            bot.send_message(message.from_user.id, "Do you receive help from others when completing tasks? (Yes/No)",
                             reply_markup=help_data_markup)
        elif lang == 'Russian':
            help_data_markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
            btn1 = types.KeyboardButton("–î–∞")
            btn2 = types.KeyboardButton("–ù–µ—Ç")
            help_data_markup.add(btn1, btn2)
            bot.send_message(message.from_user.id,
                             "–ü–æ–ª—å–∑—É–µ—Ç–µ—Å—å –ª–∏ –≤—ã –ø–æ–º–æ—â—å—é –¥—Ä—É–≥–∏—Ö –ª–∏—Ü –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∑–∞–¥–∞—á? (–î–∞/–ù–µ—Ç)",
                             reply_markup=help_data_markup)

    def question_six_hard(self, message, lang):
        if lang == 'English':
            help_data_markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
            btn1 = types.KeyboardButton("Yes")
            btn2 = types.KeyboardButton("No")
            help_data_markup.add(btn1, btn2)
            bot.send_message(message.from_user.id, "Do you receive help from others when completing the hardest task? "
                                                   "(Yes/No)",
                             reply_markup=help_data_markup)
        elif lang == 'Russian':
            help_data_markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
            btn1 = types.KeyboardButton("–î–∞")
            btn2 = types.KeyboardButton("–ù–µ—Ç")
            help_data_markup.add(btn1, btn2)
            bot.send_message(message.from_user.id, "–ü–æ–ª—å–∑—É–µ—Ç–µ—Å—å –ª–∏ –≤—ã –ø–æ–º–æ—â—å—é –¥—Ä—É–≥–∏—Ö –ª–∏—Ü –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ —Å–∞–º–æ–π —Å–ª–æ–∂–Ω–æ–π "
                                                   "–∑–∞–¥–∞—á–∏? (–î–∞/–ù–µ—Ç)",
                             reply_markup=help_data_markup)

    def question_seven(self, message, lang):
        if lang == 'English':
            markup = types.ReplyKeyboardMarkup(row_width=1)
            btn1 = types.KeyboardButton("üü¢ High")
            btn2 = types.KeyboardButton("üü° Medium")
            btn3 = types.KeyboardButton("üî¥ Low")
            markup.add(btn1, btn2, btn3)
            bot.send_message(message.from_user.id, "Indicate the priority of your typical task", reply_markup=markup)
        elif lang == 'Russian':
            markup = types.ReplyKeyboardMarkup(row_width=1)
            btn1 = types.KeyboardButton("üü¢ –í—ã—Å–æ–∫–∏–π")
            btn2 = types.KeyboardButton("üü° –°—Ä–µ–¥–Ω–∏–π")
            btn3 = types.KeyboardButton("üî¥ –ù–∏–∑–∫–∏–π")
            markup.add(btn1, btn2, btn3)
            bot.send_message(message.from_user.id,
                             "–£–∫–∞–∂–∏—Ç–µ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç –≤–∞—à–µ–π –æ–±—ã—á–Ω–æ–π –∑–∞–¥–∞—á–∏.", reply_markup=markup)

    def question_seven_hard(self, message, lang):
        if lang == 'English':
            markup = types.ReplyKeyboardMarkup(row_width=1)
            btn1 = types.KeyboardButton("üü¢ High")
            btn2 = types.KeyboardButton("üü° Medium")
            btn3 = types.KeyboardButton("üî¥ Low")
            markup.add(btn1, btn2, btn3)
            bot.send_message(message.from_user.id, "Indicate the priority of your hardest task", reply_markup=markup)
        elif lang == 'Russian':
            markup = types.ReplyKeyboardMarkup(row_width=1)
            btn1 = types.KeyboardButton("üü¢ –í—ã—Å–æ–∫–∏–π")
            btn2 = types.KeyboardButton("üü° –°—Ä–µ–¥–Ω–∏–π")
            btn3 = types.KeyboardButton("üî¥ –ù–∏–∑–∫–∏–π")
            markup.add(btn1, btn2, btn3)
            bot.send_message(message.from_user.id,
                             "–£–∫–∞–∂–∏—Ç–µ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç –≤–∞—à–µ–π —Å–∞–º–æ–π —Å–ª–æ–∂–Ω–æ–π –∑–∞–¥–∞—á–∏.", reply_markup=markup)

    @bot.message_handler(commands=['survey'])
    def start_survey(self, message, lang):
        self.question_one(message, lang)
